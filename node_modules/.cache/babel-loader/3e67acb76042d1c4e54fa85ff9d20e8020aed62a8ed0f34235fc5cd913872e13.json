{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import Layout from \"../component/Layout\";\n// import ApiService from \"../service/ApiService\";\n// import { useNavigate } from \"react-router-dom\";\n// import PaginationComponent from \"../component/PaginationComponent\";\n\n// const ProductPage = () => {\n//   const [products, setProducts] = useState([]);\n//   const [message, setMessage] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   //Pagination Set-Up\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [totalPages, setTotalPages] = useState(0);\n//   const itemsPerPage = 10;\n\n//   useEffect(() => {\n//     const getProducts = async () => {\n//       try {\n//         const productData = await ApiService.getAllProducts();\n\n//         if (productData.status === 200) {\n//           setTotalPages(Math.ceil(productData.products.length / itemsPerPage));\n\n//           setProducts(\n//             productData.products.slice(\n//               (currentPage - 1) * itemsPerPage,\n//               currentPage * itemsPerPage\n//             )\n//           );\n//         }\n//       } catch (error) {\n//         showMessage(\n//           error.response?.data?.message || \"Error Getting Products: \" + error\n//         );\n//       }\n//     };\n\n//     getProducts();\n//   }, [currentPage]);\n\n//   //Delete a product\n//   const handleDeleteProduct = async (productId) => {\n//     if (window.confirm(\"Are you sure you want to delete this Product?\")) {\n//       try {\n//         await ApiService.deleteProduct(productId);\n//         showMessage(\"Product sucessfully Deleted\");\n//         window.location.reload(); //relode page\n//       } catch (error) {\n//         showMessage(\n//           error.response?.data?.message ||\n//             \"Error Deleting in a product: \" + error\n//         );\n//       }\n//     }\n//   };\n\n//   //method to show message or errors\n//   const showMessage = (msg) => {\n//     setMessage(msg);\n//     setTimeout(() => {\n//       setMessage(\"\");\n//     }, 4000);\n//   };\n\n//   return (\n//     <Layout>\n//       {message && <div className=\"message\">{message}</div>}\n\n//       <div className=\"product-page\">\n//         <div className=\"product-header\">\n//           <h1>Products</h1>\n//           <button\n//             className=\"add-product-btn\"\n//             onClick={() => navigate(\"/add-product\")}\n//           >\n//             Add Product\n//           </button>\n//         </div>\n\n//         {products && (\n//           <div className=\"product-list\">\n//             {products.map((product) => (\n//               <div key={product.id} className=\"product-item\">\n//                 <img\n//                   className=\"product-image\"\n//                   src=\"./images/carpet.png\"\n//                   alt={product.name}\n//                 />\n\n//                 <div className=\"product-info\">\n//                     <h3 className=\"name\">{product.name}</h3>\n//                     <p className=\"sku\">Sku: {product.su}</p>\n//                     <p className=\"price\">Price: {product.price}</p>\n//                     <p className=\"quantity\">Quantity: {product.stockQuantity}</p>\n//                 </div>\n\n//                 <div className=\"product-actions\">\n//                     <button className=\"edit-btn\" onClick={()=> navigate(`/edit-product/${product.id}`)}>Edit</button>\n//                     <button  className=\"delete-btn\" onClick={()=> handleDeleteProduct(product.id)}>Delete</button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </div>\n\n//       <PaginationComponent\n//       currentPage={currentPage}\n//       totalPages={totalPages}\n//       onPageChange={setCurrentPage}\n//       />\n//     </Layout>\n//   );\n// };\n// export default ProductPage;","map":{"version":3,"names":[],"sources":["C:/Users/2370843/OneDrive - Cognizant/Desktop/Project/IMS-react/frontend/src/pages/ProductPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Layout from \"../component/Layout\";\r\n// import ApiService from \"../service/ApiService\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import PaginationComponent from \"../component/PaginationComponent\";\r\n\r\n// const ProductPage = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [message, setMessage] = useState(\"\");\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   //Pagination Set-Up\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n//   const itemsPerPage = 10;\r\n\r\n//   useEffect(() => {\r\n//     const getProducts = async () => {\r\n//       try {\r\n//         const productData = await ApiService.getAllProducts();\r\n\r\n//         if (productData.status === 200) {\r\n//           setTotalPages(Math.ceil(productData.products.length / itemsPerPage));\r\n\r\n//           setProducts(\r\n//             productData.products.slice(\r\n//               (currentPage - 1) * itemsPerPage,\r\n//               currentPage * itemsPerPage\r\n//             )\r\n//           );\r\n//         }\r\n//       } catch (error) {\r\n//         showMessage(\r\n//           error.response?.data?.message || \"Error Getting Products: \" + error\r\n//         );\r\n//       }\r\n//     };\r\n\r\n//     getProducts();\r\n//   }, [currentPage]);\r\n\r\n//   //Delete a product\r\n//   const handleDeleteProduct = async (productId) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this Product?\")) {\r\n//       try {\r\n//         await ApiService.deleteProduct(productId);\r\n//         showMessage(\"Product sucessfully Deleted\");\r\n//         window.location.reload(); //relode page\r\n//       } catch (error) {\r\n//         showMessage(\r\n//           error.response?.data?.message ||\r\n//             \"Error Deleting in a product: \" + error\r\n//         );\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   //method to show message or errors\r\n//   const showMessage = (msg) => {\r\n//     setMessage(msg);\r\n//     setTimeout(() => {\r\n//       setMessage(\"\");\r\n//     }, 4000);\r\n//   };\r\n\r\n//   return (\r\n//     <Layout>\r\n//       {message && <div className=\"message\">{message}</div>}\r\n\r\n//       <div className=\"product-page\">\r\n//         <div className=\"product-header\">\r\n//           <h1>Products</h1>\r\n//           <button\r\n//             className=\"add-product-btn\"\r\n//             onClick={() => navigate(\"/add-product\")}\r\n//           >\r\n//             Add Product\r\n//           </button>\r\n//         </div>\r\n\r\n//         {products && (\r\n//           <div className=\"product-list\">\r\n//             {products.map((product) => (\r\n//               <div key={product.id} className=\"product-item\">\r\n//                 <img\r\n//                   className=\"product-image\"\r\n//                   src=\"./images/carpet.png\"\r\n//                   alt={product.name}\r\n//                 />\r\n \r\n//                 <div className=\"product-info\">\r\n//                     <h3 className=\"name\">{product.name}</h3>\r\n//                     <p className=\"sku\">Sku: {product.su}</p>\r\n//                     <p className=\"price\">Price: {product.price}</p>\r\n//                     <p className=\"quantity\">Quantity: {product.stockQuantity}</p>\r\n//                 </div>\r\n\r\n//                 <div className=\"product-actions\">\r\n//                     <button className=\"edit-btn\" onClick={()=> navigate(`/edit-product/${product.id}`)}>Edit</button>\r\n//                     <button  className=\"delete-btn\" onClick={()=> handleDeleteProduct(product.id)}>Delete</button>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       <PaginationComponent\r\n//       currentPage={currentPage}\r\n//       totalPages={totalPages}\r\n//       onPageChange={setCurrentPage}\r\n//       />\r\n//     </Layout>\r\n//   );\r\n// };\r\n// export default ProductPage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}