{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2370843\\\\OneDrive - Cognizant\\\\Desktop\\\\Project\\\\IMS-react\\\\frontend\\\\src\\\\pages\\\\ProductPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Layout from \"../component/Layout\";\n// import ApiService from \"../service/ApiService\";\n// import { useNavigate } from \"react-router-dom\";\n// import PaginationComponent from \"../component/PaginationComponent\";\n\n// const ProductPage = () => {\n//   const [products, setProducts] = useState([]);\n//   const [message, setMessage] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   //Pagination Set-Up\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [totalPages, setTotalPages] = useState(0);\n//   const itemsPerPage = 10;\n\n//   useEffect(() => {\n//     const getProducts = async () => {\n//       try {\n//         const productData = await ApiService.getAllProducts();\n\n//         if (productData.status === 200) {\n//           setTotalPages(Math.ceil(productData.products.length / itemsPerPage));\n\n//           setProducts(\n//             productData.products.slice(\n//               (currentPage - 1) * itemsPerPage,\n//               currentPage * itemsPerPage\n//             )\n//           );\n//         }\n//       } catch (error) {\n//         showMessage(\n//           error.response?.data?.message || \"Error Getting Products: \" + error\n//         );\n//       }\n//     };\n\n//     getProducts();\n//   }, [currentPage]);\n\n//   //Delete a product\n//   const handleDeleteProduct = async (productId) => {\n//     if (window.confirm(\"Are you sure you want to delete this Product?\")) {\n//       try {\n//         await ApiService.deleteProduct(productId);\n//         showMessage(\"Product sucessfully Deleted\");\n//         window.location.reload(); //relode page\n//       } catch (error) {\n//         showMessage(\n//           error.response?.data?.message ||\n//             \"Error Deleting in a product: \" + error\n//         );\n//       }\n//     }\n//   };\n\n//   //method to show message or errors\n//   const showMessage = (msg) => {\n//     setMessage(msg);\n//     setTimeout(() => {\n//       setMessage(\"\");\n//     }, 4000);\n//   };\n\n//   return (\n//     <Layout>\n//       {message && <div className=\"message\">{message}</div>}\n\n//       <div className=\"product-page\">\n//         <div className=\"product-header\">\n//           <h1>Products</h1>\n//           <button\n//             className=\"add-product-btn\"\n//             onClick={() => navigate(\"/add-product\")}\n//           >\n//             Add Product\n//           </button>\n//         </div>\n\n//         {products && (\n//           <div className=\"product-list\">\n//             {products.map((product) => (\n//               <div key={product.id} className=\"product-item\">\n//                 <img\n//                   className=\"product-image\"\n//                   src=\"./images/carpet.png\"\n//                   alt={product.name}\n//                 />\n\n//                 <div className=\"product-info\">\n//                     <h3 className=\"name\">{product.name}</h3>\n//                     <p className=\"sku\">Sku: {product.su}</p>\n//                     <p className=\"price\">Price: {product.price}</p>\n//                     <p className=\"quantity\">Quantity: {product.stockQuantity}</p>\n//                 </div>\n\n//                 <div className=\"product-actions\">\n//                     <button className=\"edit-btn\" onClick={()=> navigate(`/edit-product/${product.id}`)}>Edit</button>\n//                     <button  className=\"delete-btn\" onClick={()=> handleDeleteProduct(product.id)}>Delete</button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </div>\n\n//       <PaginationComponent\n//       currentPage={currentPage}\n//       totalPages={totalPages}\n//       onPageChange={setCurrentPage}\n//       />\n//     </Layout>\n//   );\n// };\n// export default ProductPage;\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../component/Layout\";\nimport ApiService from \"../service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport PaginationComponent from \"../component/PaginationComponent\";\nimport * as images from '../'; // Import all images from the assets folder\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductPage = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Pagination Set-Up\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const itemsPerPage = 10;\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const productData = await ApiService.getAllProducts();\n        if (productData.status === 200) {\n          setTotalPages(Math.ceil(productData.products.length / itemsPerPage));\n          setProducts(productData.products.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage));\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        showMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error Getting Products: \" + error);\n      }\n    };\n    getProducts();\n  }, [currentPage]);\n\n  // Delete a product\n  const handleDeleteProduct = async productId => {\n    if (window.confirm(\"Are you sure you want to delete this Product?\")) {\n      try {\n        await ApiService.deleteProduct(productId);\n        showMessage(\"Product successfully Deleted\");\n        window.location.reload(); // Reload page\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        showMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error Deleting a product: \" + error);\n      }\n    }\n  };\n\n  // Method to show message or errors\n  const showMessage = msg => {\n    setMessage(msg);\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 4000);\n  };\n\n  // Function to get the image path based on the product name\n  const getImagePath = productName => {\n    const imageName = productName.toLowerCase().replace(/\\s+/g, '-'); // Convert product name to lowercase and replace spaces with dashes\n    return images[imageName]; // Return the corresponding image from the assets folder\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-product-btn\",\n          onClick: () => navigate(\"/add-product\"),\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), products && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-list\",\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"product-image\",\n            src: getImagePath(product.name) // Dynamically get the image path\n            ,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"name\",\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sku\",\n              children: [\"Sku: \", product.sku]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [\"Price: \", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"quantity\",\n              children: [\"Quantity: \", product.stockQuantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => navigate(`/edit-product/${product.id}`),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => handleDeleteProduct(product.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationComponent, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductPage, \"Y0LaGwaKfBfGk6TbMPTHuZ/yV4A=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductPage;\nexport default ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["React","useState","useEffect","Layout","ApiService","useNavigate","PaginationComponent","images","jsxDEV","_jsxDEV","ProductPage","_s","products","setProducts","message","setMessage","navigate","currentPage","setCurrentPage","totalPages","setTotalPages","itemsPerPage","getProducts","productData","getAllProducts","status","Math","ceil","length","slice","error","_error$response","_error$response$data","showMessage","response","data","handleDeleteProduct","productId","window","confirm","deleteProduct","location","reload","_error$response2","_error$response2$data","msg","setTimeout","getImagePath","productName","imageName","toLowerCase","replace","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","product","src","name","alt","sku","price","stockQuantity","id","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/2370843/OneDrive - Cognizant/Desktop/Project/IMS-react/frontend/src/pages/ProductPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Layout from \"../component/Layout\";\r\n// import ApiService from \"../service/ApiService\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import PaginationComponent from \"../component/PaginationComponent\";\r\n\r\n// const ProductPage = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [message, setMessage] = useState(\"\");\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   //Pagination Set-Up\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n//   const itemsPerPage = 10;\r\n\r\n//   useEffect(() => {\r\n//     const getProducts = async () => {\r\n//       try {\r\n//         const productData = await ApiService.getAllProducts();\r\n\r\n//         if (productData.status === 200) {\r\n//           setTotalPages(Math.ceil(productData.products.length / itemsPerPage));\r\n\r\n//           setProducts(\r\n//             productData.products.slice(\r\n//               (currentPage - 1) * itemsPerPage,\r\n//               currentPage * itemsPerPage\r\n//             )\r\n//           );\r\n//         }\r\n//       } catch (error) {\r\n//         showMessage(\r\n//           error.response?.data?.message || \"Error Getting Products: \" + error\r\n//         );\r\n//       }\r\n//     };\r\n\r\n//     getProducts();\r\n//   }, [currentPage]);\r\n\r\n//   //Delete a product\r\n//   const handleDeleteProduct = async (productId) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this Product?\")) {\r\n//       try {\r\n//         await ApiService.deleteProduct(productId);\r\n//         showMessage(\"Product sucessfully Deleted\");\r\n//         window.location.reload(); //relode page\r\n//       } catch (error) {\r\n//         showMessage(\r\n//           error.response?.data?.message ||\r\n//             \"Error Deleting in a product: \" + error\r\n//         );\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   //method to show message or errors\r\n//   const showMessage = (msg) => {\r\n//     setMessage(msg);\r\n//     setTimeout(() => {\r\n//       setMessage(\"\");\r\n//     }, 4000);\r\n//   };\r\n\r\n//   return (\r\n//     <Layout>\r\n//       {message && <div className=\"message\">{message}</div>}\r\n\r\n//       <div className=\"product-page\">\r\n//         <div className=\"product-header\">\r\n//           <h1>Products</h1>\r\n//           <button\r\n//             className=\"add-product-btn\"\r\n//             onClick={() => navigate(\"/add-product\")}\r\n//           >\r\n//             Add Product\r\n//           </button>\r\n//         </div>\r\n\r\n//         {products && (\r\n//           <div className=\"product-list\">\r\n//             {products.map((product) => (\r\n//               <div key={product.id} className=\"product-item\">\r\n//                 <img\r\n//                   className=\"product-image\"\r\n//                   src=\"./images/carpet.png\"\r\n//                   alt={product.name}\r\n//                 />\r\n \r\n//                 <div className=\"product-info\">\r\n//                     <h3 className=\"name\">{product.name}</h3>\r\n//                     <p className=\"sku\">Sku: {product.su}</p>\r\n//                     <p className=\"price\">Price: {product.price}</p>\r\n//                     <p className=\"quantity\">Quantity: {product.stockQuantity}</p>\r\n//                 </div>\r\n\r\n//                 <div className=\"product-actions\">\r\n//                     <button className=\"edit-btn\" onClick={()=> navigate(`/edit-product/${product.id}`)}>Edit</button>\r\n//                     <button  className=\"delete-btn\" onClick={()=> handleDeleteProduct(product.id)}>Delete</button>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       <PaginationComponent\r\n//       currentPage={currentPage}\r\n//       totalPages={totalPages}\r\n//       onPageChange={setCurrentPage}\r\n//       />\r\n//     </Layout>\r\n//   );\r\n// };\r\n// export default ProductPage;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../component/Layout\";\r\nimport ApiService from \"../service/ApiService\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PaginationComponent from \"../component/PaginationComponent\";\r\nimport * as images from '../'; // Import all images from the assets folder\r\n\r\nconst ProductPage = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Pagination Set-Up\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const itemsPerPage = 10;\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      try {\r\n        const productData = await ApiService.getAllProducts();\r\n\r\n        if (productData.status === 200) {\r\n          setTotalPages(Math.ceil(productData.products.length / itemsPerPage));\r\n\r\n          setProducts(\r\n            productData.products.slice(\r\n              (currentPage - 1) * itemsPerPage,\r\n              currentPage * itemsPerPage\r\n            )\r\n          );\r\n        }\r\n      } catch (error) {\r\n        showMessage(\r\n          error.response?.data?.message || \"Error Getting Products: \" + error\r\n        );\r\n      }\r\n    };\r\n\r\n    getProducts();\r\n  }, [currentPage]);\r\n\r\n  // Delete a product\r\n  const handleDeleteProduct = async (productId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this Product?\")) {\r\n      try {\r\n        await ApiService.deleteProduct(productId);\r\n        showMessage(\"Product successfully Deleted\");\r\n        window.location.reload(); // Reload page\r\n      } catch (error) {\r\n        showMessage(\r\n          error.response?.data?.message ||\r\n            \"Error Deleting a product: \" + error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  // Method to show message or errors\r\n  const showMessage = (msg) => {\r\n    setMessage(msg);\r\n    setTimeout(() => {\r\n      setMessage(\"\");\r\n    }, 4000);\r\n  };\r\n\r\n  // Function to get the image path based on the product name\r\n  const getImagePath = (productName) => {\r\n    const imageName = productName.toLowerCase().replace(/\\s+/g, '-'); // Convert product name to lowercase and replace spaces with dashes\r\n    return images[imageName]; // Return the corresponding image from the assets folder\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {message && <div className=\"message\">{message}</div>}\r\n\r\n      <div className=\"product-page\">\r\n        <div className=\"product-header\">\r\n          <h1>Products</h1>\r\n          <button\r\n            className=\"add-product-btn\"\r\n            onClick={() => navigate(\"/add-product\")}\r\n          >\r\n            Add Product\r\n          </button>\r\n        </div>\r\n\r\n        {products && (\r\n          <div className=\"product-list\">\r\n            {products.map((product) => (\r\n              <div key={product.id} className=\"product-item\">\r\n                <img\r\n                  className=\"product-image\"\r\n                  src={getImagePath(product.name)} // Dynamically get the image path\r\n                  alt={product.name}\r\n                />\r\n\r\n                <div className=\"product-info\">\r\n                  <h3 className=\"name\">{product.name}</h3>\r\n                  <p className=\"sku\">Sku: {product.sku}</p>\r\n                  <p className=\"price\">Price: {product.price}</p>\r\n                  <p className=\"quantity\">Quantity: {product.stockQuantity}</p>\r\n                </div>\r\n\r\n                <div className=\"product-actions\">\r\n                  <button className=\"edit-btn\" onClick={() => navigate(`/edit-product/${product.id}`)}>Edit</button>\r\n                  <button className=\"delete-btn\" onClick={() => handleDeleteProduct(product.id)}>Delete</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <PaginationComponent\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        onPageChange={setCurrentPage}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProductPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}