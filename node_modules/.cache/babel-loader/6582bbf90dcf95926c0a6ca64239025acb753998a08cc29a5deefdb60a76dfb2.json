{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2370843\\\\OneDrive - Cognizant\\\\Desktop\\\\Project\\\\IMS-react\\\\frontend\\\\src\\\\pages\\\\ProductPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Layout from \"../component/Layout\";\n// import ApiService from \"../service/ApiService\";\n// import { useNavigate } from \"react-router-dom\";\n// import PaginationComponent from \"../component/PaginationComponent\";\n\n// const ProductPage = () => {\n//   const [products, setProducts] = useState([]);\n//   const [message, setMessage] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   //Pagination Set-Up\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [totalPages, setTotalPages] = useState(0);\n//   const itemsPerPage = 10;\n\n//   useEffect(() => {\n//     const getProducts = async () => {\n//       try {\n//         const productData = await ApiService.getAllProducts();\n\n//         if (productData.status === 200) {\n//           setTotalPages(Math.ceil(productData.products.length / itemsPerPage));\n\n//           setProducts(\n//             productData.products.slice(\n//               (currentPage - 1) * itemsPerPage,\n//               currentPage * itemsPerPage\n//             )\n//           );\n//         }\n//       } catch (error) {\n//         showMessage(\n//           error.response?.data?.message || \"Error Getting Products: \" + error\n//         );\n//       }\n//     };\n\n//     getProducts();\n//   }, [currentPage]);\n\n//   //Delete a product\n//   const handleDeleteProduct = async (productId) => {\n//     if (window.confirm(\"Are you sure you want to delete this Product?\")) {\n//       try {\n//         await ApiService.deleteProduct(productId);\n//         showMessage(\"Product sucessfully Deleted\");\n//         window.location.reload(); //relode page\n//       } catch (error) {\n//         showMessage(\n//           error.response?.data?.message ||\n//             \"Error Deleting in a product: \" + error\n//         );\n//       }\n//     }\n//   };\n\n//   //method to show message or errors\n//   const showMessage = (msg) => {\n//     setMessage(msg);\n//     setTimeout(() => {\n//       setMessage(\"\");\n//     }, 4000);\n//   };\n\n//   return (\n//     <Layout>\n//       {message && <div className=\"message\">{message}</div>}\n\n//       <div className=\"product-page\">\n//         <div className=\"product-header\">\n//           <h1>Products</h1>\n//           <button\n//             className=\"add-product-btn\"\n//             onClick={() => navigate(\"/add-product\")}\n//           >\n//             Add Product\n//           </button>\n//         </div>\n\n//         {products && (\n//           <div className=\"product-list\">\n//             {products.map((product) => (\n//               <div key={product.id} className=\"product-item\">\n//                 <img\n//                   className=\"product-image\"\n//                   src=\"./images/carpet.png\"\n//                   alt={product.name}\n//                 />\n\n//                 <div className=\"product-info\">\n//                     <h3 className=\"name\">{product.name}</h3>\n//                     <p className=\"sku\">Sku: {product.su}</p>\n//                     <p className=\"price\">Price: {product.price}</p>\n//                     <p className=\"quantity\">Quantity: {product.stockQuantity}</p>\n//                 </div>\n\n//                 <div className=\"product-actions\">\n//                     <button className=\"edit-btn\" onClick={()=> navigate(`/edit-product/${product.id}`)}>Edit</button>\n//                     <button  className=\"delete-btn\" onClick={()=> handleDeleteProduct(product.id)}>Delete</button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </div>\n\n//       <PaginationComponent\n//       currentPage={currentPage}\n//       totalPages={totalPages}\n//       onPageChange={setCurrentPage}\n//       />\n//     </Layout>\n//   );\n// };\n// export default ProductPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import Layout from \"../component/Layout\";\n// import ApiService from \"../service/ApiService\";\n// import { useNavigate } from \"react-router-dom\";\n// import PaginationComponent from \"../component/PaginationComponent\";\n\n// // Function to dynamically import images\n// const importAll = (r) => {\n//   let images = {};\n//   r.keys().forEach((item, index) => {\n//     images[item.replace('./', '')] = r(item);\n//   });\n//   return images;\n// };\n\n// // Import all images from the assets directory\n// const images = importAll(require.context('../assets', false, /\\.(png|jpe?g|svg)$/));\n\n// const ProductPage = () => {\n//   const [products, setProducts] = useState([]);\n//   const [message, setMessage] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   // Pagination Set-Up\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [totalPages, setTotalPages] = useState(0);\n//   const itemsPerPage = 10;\n\n//   useEffect(() => {\n//     const getProducts = async () => {\n//       try {\n//         const productData = await ApiService.getAllProducts();\n\n//         if (productData.status === 200) {\n//           setTotalPages(Math.ceil(productData.products.length / itemsPerPage));\n\n//           setProducts(\n//             productData.products.slice(\n//               (currentPage - 1) * itemsPerPage,\n//               currentPage * itemsPerPage\n//             )\n//           );\n//         }\n//       } catch (error) {\n//         showMessage(\n//           error.response?.data?.message || \"Error Getting Products: \" + error\n//         );\n//       }\n//     };\n\n//     getProducts();\n//   }, [currentPage]);\n\n//   // Delete a product\n//   const handleDeleteProduct = async (productId) => {\n//     if (window.confirm(\"Are you sure you want to delete this Product?\")) {\n//       try {\n//         await ApiService.deleteProduct(productId);\n//         showMessage(\"Product successfully Deleted\");\n//         window.location.reload(); // reload page\n//       } catch (error) {\n//         showMessage(\n//           error.response?.data?.message ||\n//             \"Error Deleting a product: \" + error\n//         );\n//       }\n//     }\n//   };\n\n//   // Method to show message or errors\n//   const showMessage = (msg) => {\n//     setMessage(msg);\n//     setTimeout(() => {\n//       setMessage(\"\");\n//     }, 4000);\n//   };\n\n//   return (\n//     <Layout>\n//       {message && <div className=\"message\">{message}</div>}\n\n//       <div className=\"product-page\">\n//         <div className=\"product-header\">\n//           <h1>Products</h1>\n//           <button\n//             className=\"add-product-btn\"\n//             onClick={() => navigate(\"/add-product\")}\n//           >\n//             Add Product\n//           </button>\n//         </div>\n\n//         {products && (\n//           <div className=\"product-list\">\n//             {products.map((product) => (\n//               <div key={product.id} className=\"product-item\">\n//                 <img\n//                   className=\"product-image\"\n//                   src={\n//                     images[`${product.name}.jpg`] ||\n//                     images[`${product.name}.png`] ||\n//                     images[`${product.name}.svg`] ||\n//                     'https://upload.wikimedia.org/wikipedia/commons/a/a3/Image-not-found.png?20210521171500'\n//                   }\n//                   alt={product.name}\n//                 />\n\n//                 <div className=\"product-info\">\n//                     <h3 className=\"name\">{product.name}</h3>\n//                     <p className=\"sku\">Sku: {product.su}</p>\n//                     <p className=\"price\">Price: {product.price}</p>\n//                     <p className=\"quantity\">Quantity: {product.stockQuantity}</p>\n//                 </div>\n\n//                 <div className=\"product-actions\">\n//                     <button className=\"edit-btn\" onClick={() => navigate(`/edit-product/${product.id}`)}>Edit</button>\n//                     <button className=\"delete-btn\" onClick={() => handleDeleteProduct(product.id)}>Delete</button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </div>\n\n//       <PaginationComponent\n//         currentPage={currentPage}\n//         totalPages={totalPages}\n//         onPageChange={setCurrentPage}\n//       />\n//     </Layout>\n//   );\n// };\n\n// export default ProductPage;\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../component/Layout\";\nimport ApiService from \"../service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport PaginationComponent from \"../component/PaginationComponent\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PEXELS_API_KEY = 'TkOcFNcK1JNYwaHBziZwMVXoeQMwBUweo7C7z3RsEotA1uO0IcuScJ4d'; // Replace with your Pexels API key\n\n// Function to dynamically import images\nconst importAll = r => {\n  let images = {};\n  r.keys().forEach((item, index) => {\n    images[item.replace('./', '')] = r(item);\n  });\n  return images;\n};\n\n// Import all images from the assets directory\nconst localImages = importAll(require.context('../assets', false, /\\.(png|jpe?g|svg)$/));\nconst ProductPage = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Pagination Set-Up\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const itemsPerPage = 10;\n\n  // Function to fetch image from Pexels API\n  const fetchImageFromPexels = async query => {\n    try {\n      var _response$data$photos, _response$data$photos2;\n      const response = await axios.get(`https://api.pexels.com/v1/search?query=${query}&per_page=1`, {\n        headers: {\n          Authorization: PEXELS_API_KEY\n        }\n      });\n      return ((_response$data$photos = response.data.photos[0]) === null || _response$data$photos === void 0 ? void 0 : (_response$data$photos2 = _response$data$photos.src) === null || _response$data$photos2 === void 0 ? void 0 : _response$data$photos2.medium) || 'https://upload.wikimedia.org/wikipedia/commons/a/a3/Image-not-found.png';\n    } catch (error) {\n      console.error('Error fetching image from Pexels:', error);\n      return 'https://upload.wikimedia.org/wikipedia/commons/a/a3/Image-not-found.png';\n    }\n  };\n\n  // Function to get image URL (local or Pexels)\n  const getImageUrl = async productName => {\n    // Check for local image first\n    const localImageKey = Object.keys(localImages).find(key => key.toLowerCase().includes(productName.toLowerCase()));\n    if (localImageKey) {\n      return localImages[localImageKey]; // Return local image if found\n    }\n\n    // If local image not found, fetch from Pexels\n    const pexelsImageUrl = await fetchImageFromPexels(productName);\n    return pexelsImageUrl;\n  };\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const productData = await ApiService.getAllProducts();\n        if (productData.status === 200) {\n          setTotalPages(Math.ceil(productData.products.length / itemsPerPage));\n\n          // Fetch images for each product\n          const productsWithImages = await Promise.all(productData.products.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).map(async product => {\n            const imageUrl = await getImageUrl(product.name);\n            return {\n              ...product,\n              imageUrl\n            };\n          }));\n          setProducts(productsWithImages);\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        showMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error Getting Products: \" + error);\n      }\n    };\n    getProducts();\n  }, [currentPage]);\n\n  // Delete a product\n  const handleDeleteProduct = async productId => {\n    if (window.confirm(\"Are you sure you want to delete this Product?\")) {\n      try {\n        await ApiService.deleteProduct(productId);\n        showMessage(\"Product successfully Deleted\");\n        window.location.reload(); // reload page\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        showMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error Deleting a product: \" + error);\n      }\n    }\n  };\n\n  // Method to show message or errors\n  const showMessage = msg => {\n    setMessage(msg);\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 4000);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-product-btn\",\n          onClick: () => navigate(\"/add-product\"),\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), products && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-list\",\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"product-image\",\n            src: product.imageUrl,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"name\",\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sku\",\n              children: [\"Product: \", product.su]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [\"Price: \", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"quantity\",\n              children: [\"Quantity: \", product.stockQuantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => navigate(`/edit-product/${product.id}`),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => handleDeleteProduct(product.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 17\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationComponent, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductPage, \"Y0LaGwaKfBfGk6TbMPTHuZ/yV4A=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductPage;\nexport default ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["React","useState","useEffect","Layout","ApiService","useNavigate","PaginationComponent","axios","jsxDEV","_jsxDEV","PEXELS_API_KEY","importAll","r","images","keys","forEach","item","index","replace","localImages","require","context","ProductPage","_s","products","setProducts","message","setMessage","navigate","currentPage","setCurrentPage","totalPages","setTotalPages","itemsPerPage","fetchImageFromPexels","query","_response$data$photos","_response$data$photos2","response","get","headers","Authorization","data","photos","src","medium","error","console","getImageUrl","productName","localImageKey","Object","find","key","toLowerCase","includes","pexelsImageUrl","getProducts","productData","getAllProducts","status","Math","ceil","length","productsWithImages","Promise","all","slice","map","product","imageUrl","name","_error$response","_error$response$data","showMessage","handleDeleteProduct","productId","window","confirm","deleteProduct","location","reload","_error$response2","_error$response2$data","msg","setTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","alt","su","price","stockQuantity","id","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/2370843/OneDrive - Cognizant/Desktop/Project/IMS-react/frontend/src/pages/ProductPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Layout from \"../component/Layout\";\r\n// import ApiService from \"../service/ApiService\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import PaginationComponent from \"../component/PaginationComponent\";\r\n\r\n// const ProductPage = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [message, setMessage] = useState(\"\");\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   //Pagination Set-Up\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n//   const itemsPerPage = 10;\r\n\r\n//   useEffect(() => {\r\n//     const getProducts = async () => {\r\n//       try {\r\n//         const productData = await ApiService.getAllProducts();\r\n\r\n//         if (productData.status === 200) {\r\n//           setTotalPages(Math.ceil(productData.products.length / itemsPerPage));\r\n\r\n//           setProducts(\r\n//             productData.products.slice(\r\n//               (currentPage - 1) * itemsPerPage,\r\n//               currentPage * itemsPerPage\r\n//             )\r\n//           );\r\n//         }\r\n//       } catch (error) {\r\n//         showMessage(\r\n//           error.response?.data?.message || \"Error Getting Products: \" + error\r\n//         );\r\n//       }\r\n//     };\r\n\r\n//     getProducts();\r\n//   }, [currentPage]);\r\n\r\n//   //Delete a product\r\n//   const handleDeleteProduct = async (productId) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this Product?\")) {\r\n//       try {\r\n//         await ApiService.deleteProduct(productId);\r\n//         showMessage(\"Product sucessfully Deleted\");\r\n//         window.location.reload(); //relode page\r\n//       } catch (error) {\r\n//         showMessage(\r\n//           error.response?.data?.message ||\r\n//             \"Error Deleting in a product: \" + error\r\n//         );\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   //method to show message or errors\r\n//   const showMessage = (msg) => {\r\n//     setMessage(msg);\r\n//     setTimeout(() => {\r\n//       setMessage(\"\");\r\n//     }, 4000);\r\n//   };\r\n\r\n//   return (\r\n//     <Layout>\r\n//       {message && <div className=\"message\">{message}</div>}\r\n\r\n//       <div className=\"product-page\">\r\n//         <div className=\"product-header\">\r\n//           <h1>Products</h1>\r\n//           <button\r\n//             className=\"add-product-btn\"\r\n//             onClick={() => navigate(\"/add-product\")}\r\n//           >\r\n//             Add Product\r\n//           </button>\r\n//         </div>\r\n\r\n//         {products && (\r\n//           <div className=\"product-list\">\r\n//             {products.map((product) => (\r\n//               <div key={product.id} className=\"product-item\">\r\n//                 <img\r\n//                   className=\"product-image\"\r\n//                   src=\"./images/carpet.png\"\r\n//                   alt={product.name}\r\n//                 />\r\n \r\n//                 <div className=\"product-info\">\r\n//                     <h3 className=\"name\">{product.name}</h3>\r\n//                     <p className=\"sku\">Sku: {product.su}</p>\r\n//                     <p className=\"price\">Price: {product.price}</p>\r\n//                     <p className=\"quantity\">Quantity: {product.stockQuantity}</p>\r\n//                 </div>\r\n\r\n//                 <div className=\"product-actions\">\r\n//                     <button className=\"edit-btn\" onClick={()=> navigate(`/edit-product/${product.id}`)}>Edit</button>\r\n//                     <button  className=\"delete-btn\" onClick={()=> handleDeleteProduct(product.id)}>Delete</button>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       <PaginationComponent\r\n//       currentPage={currentPage}\r\n//       totalPages={totalPages}\r\n//       onPageChange={setCurrentPage}\r\n//       />\r\n//     </Layout>\r\n//   );\r\n// };\r\n// export default ProductPage;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import Layout from \"../component/Layout\";\r\n// import ApiService from \"../service/ApiService\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import PaginationComponent from \"../component/PaginationComponent\";\r\n\r\n// // Function to dynamically import images\r\n// const importAll = (r) => {\r\n//   let images = {};\r\n//   r.keys().forEach((item, index) => {\r\n//     images[item.replace('./', '')] = r(item);\r\n//   });\r\n//   return images;\r\n// };\r\n\r\n// // Import all images from the assets directory\r\n// const images = importAll(require.context('../assets', false, /\\.(png|jpe?g|svg)$/));\r\n\r\n// const ProductPage = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [message, setMessage] = useState(\"\");\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   // Pagination Set-Up\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n//   const itemsPerPage = 10;\r\n\r\n//   useEffect(() => {\r\n//     const getProducts = async () => {\r\n//       try {\r\n//         const productData = await ApiService.getAllProducts();\r\n\r\n//         if (productData.status === 200) {\r\n//           setTotalPages(Math.ceil(productData.products.length / itemsPerPage));\r\n\r\n//           setProducts(\r\n//             productData.products.slice(\r\n//               (currentPage - 1) * itemsPerPage,\r\n//               currentPage * itemsPerPage\r\n//             )\r\n//           );\r\n//         }\r\n//       } catch (error) {\r\n//         showMessage(\r\n//           error.response?.data?.message || \"Error Getting Products: \" + error\r\n//         );\r\n//       }\r\n//     };\r\n\r\n//     getProducts();\r\n//   }, [currentPage]);\r\n\r\n//   // Delete a product\r\n//   const handleDeleteProduct = async (productId) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this Product?\")) {\r\n//       try {\r\n//         await ApiService.deleteProduct(productId);\r\n//         showMessage(\"Product successfully Deleted\");\r\n//         window.location.reload(); // reload page\r\n//       } catch (error) {\r\n//         showMessage(\r\n//           error.response?.data?.message ||\r\n//             \"Error Deleting a product: \" + error\r\n//         );\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   // Method to show message or errors\r\n//   const showMessage = (msg) => {\r\n//     setMessage(msg);\r\n//     setTimeout(() => {\r\n//       setMessage(\"\");\r\n//     }, 4000);\r\n//   };\r\n\r\n//   return (\r\n//     <Layout>\r\n//       {message && <div className=\"message\">{message}</div>}\r\n\r\n//       <div className=\"product-page\">\r\n//         <div className=\"product-header\">\r\n//           <h1>Products</h1>\r\n//           <button\r\n//             className=\"add-product-btn\"\r\n//             onClick={() => navigate(\"/add-product\")}\r\n//           >\r\n//             Add Product\r\n//           </button>\r\n//         </div>\r\n\r\n//         {products && (\r\n//           <div className=\"product-list\">\r\n//             {products.map((product) => (\r\n//               <div key={product.id} className=\"product-item\">\r\n//                 <img\r\n//                   className=\"product-image\"\r\n//                   src={\r\n//                     images[`${product.name}.jpg`] ||\r\n//                     images[`${product.name}.png`] ||\r\n//                     images[`${product.name}.svg`] ||\r\n//                     'https://upload.wikimedia.org/wikipedia/commons/a/a3/Image-not-found.png?20210521171500'\r\n//                   }\r\n//                   alt={product.name}\r\n//                 />\r\n \r\n//                 <div className=\"product-info\">\r\n//                     <h3 className=\"name\">{product.name}</h3>\r\n//                     <p className=\"sku\">Sku: {product.su}</p>\r\n//                     <p className=\"price\">Price: {product.price}</p>\r\n//                     <p className=\"quantity\">Quantity: {product.stockQuantity}</p>\r\n//                 </div>\r\n\r\n//                 <div className=\"product-actions\">\r\n//                     <button className=\"edit-btn\" onClick={() => navigate(`/edit-product/${product.id}`)}>Edit</button>\r\n//                     <button className=\"delete-btn\" onClick={() => handleDeleteProduct(product.id)}>Delete</button>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       <PaginationComponent\r\n//         currentPage={currentPage}\r\n//         totalPages={totalPages}\r\n//         onPageChange={setCurrentPage}\r\n//       />\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// export default ProductPage;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../component/Layout\";\r\nimport ApiService from \"../service/ApiService\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PaginationComponent from \"../component/PaginationComponent\";\r\nimport axios from \"axios\";\r\n\r\nconst PEXELS_API_KEY = 'TkOcFNcK1JNYwaHBziZwMVXoeQMwBUweo7C7z3RsEotA1uO0IcuScJ4d'; // Replace with your Pexels API key\r\n\r\n// Function to dynamically import images\r\nconst importAll = (r) => {\r\n  let images = {};\r\n  r.keys().forEach((item, index) => {\r\n    images[item.replace('./', '')] = r(item);\r\n  });\r\n  return images;\r\n};\r\n\r\n// Import all images from the assets directory\r\nconst localImages = importAll(require.context('../assets', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nconst ProductPage = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Pagination Set-Up\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const itemsPerPage = 10;\r\n\r\n  // Function to fetch image from Pexels API\r\n  const fetchImageFromPexels = async (query) => {\r\n    try {\r\n      const response = await axios.get(`https://api.pexels.com/v1/search?query=${query}&per_page=1`, {\r\n        headers: {\r\n          Authorization: PEXELS_API_KEY,\r\n        },\r\n      });\r\n      return response.data.photos[0]?.src?.medium || 'https://upload.wikimedia.org/wikipedia/commons/a/a3/Image-not-found.png';\r\n    } catch (error) {\r\n      console.error('Error fetching image from Pexels:', error);\r\n      return 'https://upload.wikimedia.org/wikipedia/commons/a/a3/Image-not-found.png';\r\n    }\r\n  };\r\n\r\n  // Function to get image URL (local or Pexels)\r\n  const getImageUrl = async (productName) => {\r\n    // Check for local image first\r\n    const localImageKey = Object.keys(localImages).find((key) =>\r\n      key.toLowerCase().includes(productName.toLowerCase())\r\n    );\r\n\r\n    if (localImageKey) {\r\n      return localImages[localImageKey]; // Return local image if found\r\n    }\r\n\r\n    // If local image not found, fetch from Pexels\r\n    const pexelsImageUrl = await fetchImageFromPexels(productName);\r\n    return pexelsImageUrl;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      try {\r\n        const productData = await ApiService.getAllProducts();\r\n\r\n        if (productData.status === 200) {\r\n          setTotalPages(Math.ceil(productData.products.length / itemsPerPage));\r\n\r\n          // Fetch images for each product\r\n          const productsWithImages = await Promise.all(\r\n            productData.products\r\n              .slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage)\r\n              .map(async (product) => {\r\n                const imageUrl = await getImageUrl(product.name);\r\n                return { ...product, imageUrl };\r\n              })\r\n          );\r\n\r\n          setProducts(productsWithImages);\r\n        }\r\n      } catch (error) {\r\n        showMessage(\r\n          error.response?.data?.message || \"Error Getting Products: \" + error\r\n        );\r\n      }\r\n    };\r\n\r\n    getProducts();\r\n  }, [currentPage]);\r\n\r\n  // Delete a product\r\n  const handleDeleteProduct = async (productId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this Product?\")) {\r\n      try {\r\n        await ApiService.deleteProduct(productId);\r\n        showMessage(\"Product successfully Deleted\");\r\n        window.location.reload(); // reload page\r\n      } catch (error) {\r\n        showMessage(\r\n          error.response?.data?.message ||\r\n            \"Error Deleting a product: \" + error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  // Method to show message or errors\r\n  const showMessage = (msg) => {\r\n    setMessage(msg);\r\n    setTimeout(() => {\r\n      setMessage(\"\");\r\n    }, 4000);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {message && <div className=\"message\">{message}</div>}\r\n\r\n      <div className=\"product-page\">\r\n        <div className=\"product-header\">\r\n          <h1>Products</h1>\r\n          <button\r\n            className=\"add-product-btn\"\r\n            onClick={() => navigate(\"/add-product\")}\r\n          >\r\n            Add Product\r\n          </button>\r\n        </div>\r\n\r\n        {products && (\r\n          <div className=\"product-list\">\r\n            {products.map((product) => (\r\n              <div key={product.id} className=\"product-item\">\r\n                <img\r\n                  className=\"product-image\"\r\n                  src={product.imageUrl}\r\n                  alt={product.name}\r\n                />\r\n \r\n                <div className=\"product-info\">\r\n                    <h3 className=\"name\">{product.name}</h3>\r\n                    <p className=\"sku\">Product: {product.su}</p>\r\n                    <p className=\"price\">Price: {product.price}</p>\r\n                    <p className=\"quantity\">Quantity: {product.stockQuantity}</p>\r\n                </div>\r\n\r\n                <div className=\"product-actions\">\r\n                    <button className=\"edit-btn\" onClick={() => navigate(`/edit-product/${product.id}`)}>Edit</button>\r\n                    <button className=\"delete-btn\" onClick={() => handleDeleteProduct(product.id)}>Delete</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <PaginationComponent\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        onPageChange={setCurrentPage}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProductPage;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}