{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2370843\\\\OneDrive - Cognizant\\\\Desktop\\\\Project\\\\IMS-react\\\\frontend\\\\src\\\\pages\\\\AddEditProductPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Layout from \"../component/Layout\";\n// import ApiService from \"../service/ApiService\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n\n// const AddEditProductPage = () => {\n//   const { productId } = useParams(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [sku, setSku] = useState(\"\");\n//   const [price, setPrice] = useState(\"\");\n//   const [stockQuantity, setStokeQuantity] = useState(\"\");\n//   const [categoryId, setCategoryId] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [imageFile, setImageFile] = useState(null);\n//   const [imageUrl, setImageUrl] = useState(\"\");\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [categories, setCategories] = useState([]);\n//   const [message, setMessage] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         const categoriesData = await ApiService.getAllCategory();\n//         setCategories(categoriesData.categories);\n//       } catch (error) {\n//         showMessage(\n//           error.response?.data?.message ||\n//             \"Error Getting all Categories: \" + error\n//         );\n//       }\n//     };\n\n//     const fetProductById = async () => {\n//       if (productId) {\n//         setIsEditing(true);\n//         try {\n//           const productData = await ApiService.getProductById(productId);\n//           if (productData.status === 200) {\n//             setName(productData.product.name);\n//             setSku(productData.product.sku);\n//             setPrice(productData.product.price);\n//             setStokeQuantity(productData.product.stockQuantity);\n//             setCategoryId(productData.product.categoryId);\n//             setDescription(productData.product.description);\n//             setImageUrl(productData.product.imageUrl);\n//           } else {\n//             showMessage(productData.message);\n//           }\n//         } catch (error) {\n//           showMessage(\n//             error.response?.data?.message ||\n//               \"Error Getting a Product by Id: \" + error\n//           );\n//         }\n//       }\n//     };\n\n//     fetchCategories();\n//     if (productId) fetProductById();\n//   }, [productId]);\n\n//   //metjhod to show message or errors\n//   const showMessage = (msg) => {\n//     setMessage(msg);\n//     setTimeout(() => {\n//       setMessage(\"\");\n//     }, 4000);\n//   };\n\n//   const handleImageChange = (e) => {\n//     const file = e.target.files[0];\n//     setImageFile(file);\n//     const reader = new FileReader();\n//     reader.onloadend = () => setImageUrl(reader.result); //user imagurl to preview the image to upload\n//     reader.readAsDataURL(file);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     formData.append(\"name\", name);\n//     formData.append(\"sku\", sku);\n//     formData.append(\"price\", price);\n//     formData.append(\"stockQuantity\", stockQuantity);\n//     formData.append(\"categoryId\", categoryId);\n//     formData.append(\"description\", description);\n//     if (imageFile) {\n//       formData.append(\"imageFile\", imageFile);\n//     }\n\n//     try {\n//       if (isEditing) {\n//         formData.append(\"productId\", productId);\n//         await ApiService.updateProduct(formData);\n//         showMessage(\"Product successfully updated\");\n//       } else {\n//         await ApiService.addProduct(formData);\n//         showMessage(\"Product successfully Saved ðŸ¤©\");\n//       }\n//       navigate(\"/product\");\n//     } catch (error) {\n//       showMessage(\n//         error.response?.data?.message || \"Error Saving a Product: \" + error\n//       );\n//     }\n//   };\n\n//   return (\n//     <Layout>\n//       {message && <div className=\"message\">{message}</div>}\n\n//       <div className=\"product-form-page\">\n//         <h1>{isEditing ? \"Edit Product\" : \"Add Product\"}</h1>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>Product Name</label>\n//             <input\n//               type=\"text\"\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Sku</label>\n//             <input\n//               type=\"text\"\n//               value={sku}\n//               onChange={(e) => setSku(e.target.value)}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Stock Quantity</label>\n//             <input\n//               type=\"number\"\n//               value={stockQuantity}\n//               onChange={(e) => setStokeQuantity(e.target.value)}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Price</label>\n//             <input\n//               type=\"number\"\n//               value={price}\n//               onChange={(e) => setPrice(e.target.value)}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Description</label>\n\n//             <textarea\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Category</label>\n\n//             <select\n//               value={categoryId}\n//               onChange={(e) => setCategoryId(e.target.value)}\n//               required\n//             >\n//               <option value=\"\">Select a category</option>\n\n//               {categories.map((category) => (\n//                 <option key={category.id} value={category.id}>\n//                   {category.name}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Product Image</label>\n//             <input type=\"file\" onChange={handleImageChange} />\n\n//             {imageUrl && (\n//               <img src={imageUrl} alt=\"preview\" className=\"image-preview\" />\n//             )}\n//           </div>\n//           <button type=\"submit\">{isEditing ? \"Edit Product\" : \"Add Product\"}</button>\n\n//         </form>\n//       </div>\n//     </Layout>\n//   );\n// };\n\n// export default AddEditProductPage;\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../component/Layout\";\nimport ApiService from \"../service/ApiService\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddEditProductPage = () => {\n  _s();\n  const {\n    productId\n  } = useParams(\"\");\n  const [name, setName] = useState(\"\");\n  const [sku, setSku] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [stockQuantity, setStokeQuantity] = useState(\"\");\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Set the default image URL to the dummy image\n  const imageUrl = \"/assets/dummy.png\";\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const categoriesData = await ApiService.getAllCategory();\n        setCategories(categoriesData.categories);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        showMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error Getting all Categories: \" + error);\n      }\n    };\n    const fetProductById = async () => {\n      if (productId) {\n        setIsEditing(true);\n        try {\n          const productData = await ApiService.getProductById(productId);\n          if (productData.status === 200) {\n            setName(productData.product.name);\n            setSku(productData.product.sku);\n            setPrice(productData.product.price);\n            setStokeQuantity(productData.product.stockQuantity);\n            setCategoryId(productData.product.categoryId);\n            setDescription(productData.product.description);\n          } else {\n            showMessage(productData.message);\n          }\n        } catch (error) {\n          var _error$response2, _error$response2$data;\n          showMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error Getting a Product by Id: \" + error);\n        }\n      }\n    };\n    fetchCategories();\n    if (productId) fetProductById();\n  }, [productId]);\n\n  // Method to show message or errors\n  const showMessage = msg => {\n    setMessage(msg);\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 4000);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"sku\", sku);\n    formData.append(\"price\", price);\n    formData.append(\"stockQuantity\", stockQuantity);\n    formData.append(\"categoryId\", categoryId);\n    formData.append(\"description\", description);\n    formData.append(\"imageUrl\", imageUrl); // Always send the dummy image URL\n\n    try {\n      if (isEditing) {\n        formData.append(\"productId\", productId);\n        await ApiService.updateProduct(formData);\n        showMessage(\"Product successfully updated\");\n      } else {\n        await ApiService.addProduct(formData);\n        showMessage(\"Product successfully Saved ðŸ¤©\");\n      }\n      navigate(\"/product\");\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      showMessage(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Error Saving a Product: \" + error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-form-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isEditing ? \"Edit Product\" : \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: sku,\n            onChange: e => setSku(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Stock Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: stockQuantity,\n            onChange: e => setStokeQuantity(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: price,\n            onChange: e => setPrice(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: categoryId,\n            onChange: e => setCategoryId(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Product Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: \"preview\",\n            className: \"image-preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isEditing ? \"Edit Product\" : \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(AddEditProductPage, \"XWTc6JFOXrvRMSjuLd1BJ/FtLyU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AddEditProductPage;\nexport default AddEditProductPage;\nvar _c;\n$RefreshReg$(_c, \"AddEditProductPage\");","map":{"version":3,"names":["React","useState","useEffect","Layout","ApiService","useNavigate","useParams","jsxDEV","_jsxDEV","AddEditProductPage","_s","productId","name","setName","sku","setSku","price","setPrice","stockQuantity","setStokeQuantity","categoryId","setCategoryId","description","setDescription","isEditing","setIsEditing","categories","setCategories","message","setMessage","navigate","imageUrl","fetchCategories","categoriesData","getAllCategory","error","_error$response","_error$response$data","showMessage","response","data","fetProductById","productData","getProductById","status","product","_error$response2","_error$response2$data","msg","setTimeout","handleSubmit","e","preventDefault","formData","FormData","append","updateProduct","addProduct","_error$response3","_error$response3$data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","map","category","id","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/2370843/OneDrive - Cognizant/Desktop/Project/IMS-react/frontend/src/pages/AddEditProductPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Layout from \"../component/Layout\";\r\n// import ApiService from \"../service/ApiService\";\r\n// import { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n// const AddEditProductPage = () => {\r\n//   const { productId } = useParams(\"\");\r\n//   const [name, setName] = useState(\"\");\r\n//   const [sku, setSku] = useState(\"\");\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [stockQuantity, setStokeQuantity] = useState(\"\");\r\n//   const [categoryId, setCategoryId] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [imageFile, setImageFile] = useState(null);\r\n//   const [imageUrl, setImageUrl] = useState(\"\");\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [message, setMessage] = useState(\"\");\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchCategories = async () => {\r\n//       try {\r\n//         const categoriesData = await ApiService.getAllCategory();\r\n//         setCategories(categoriesData.categories);\r\n//       } catch (error) {\r\n//         showMessage(\r\n//           error.response?.data?.message ||\r\n//             \"Error Getting all Categories: \" + error\r\n//         );\r\n//       }\r\n//     };\r\n\r\n//     const fetProductById = async () => {\r\n//       if (productId) {\r\n//         setIsEditing(true);\r\n//         try {\r\n//           const productData = await ApiService.getProductById(productId);\r\n//           if (productData.status === 200) {\r\n//             setName(productData.product.name);\r\n//             setSku(productData.product.sku);\r\n//             setPrice(productData.product.price);\r\n//             setStokeQuantity(productData.product.stockQuantity);\r\n//             setCategoryId(productData.product.categoryId);\r\n//             setDescription(productData.product.description);\r\n//             setImageUrl(productData.product.imageUrl);\r\n//           } else {\r\n//             showMessage(productData.message);\r\n//           }\r\n//         } catch (error) {\r\n//           showMessage(\r\n//             error.response?.data?.message ||\r\n//               \"Error Getting a Product by Id: \" + error\r\n//           );\r\n//         }\r\n//       }\r\n//     };\r\n\r\n//     fetchCategories();\r\n//     if (productId) fetProductById();\r\n//   }, [productId]);\r\n\r\n//   //metjhod to show message or errors\r\n//   const showMessage = (msg) => {\r\n//     setMessage(msg);\r\n//     setTimeout(() => {\r\n//       setMessage(\"\");\r\n//     }, 4000);\r\n//   };\r\n\r\n//   const handleImageChange = (e) => {\r\n//     const file = e.target.files[0];\r\n//     setImageFile(file);\r\n//     const reader = new FileReader();\r\n//     reader.onloadend = () => setImageUrl(reader.result); //user imagurl to preview the image to upload\r\n//     reader.readAsDataURL(file);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const formData = new FormData();\r\n//     formData.append(\"name\", name);\r\n//     formData.append(\"sku\", sku);\r\n//     formData.append(\"price\", price);\r\n//     formData.append(\"stockQuantity\", stockQuantity);\r\n//     formData.append(\"categoryId\", categoryId);\r\n//     formData.append(\"description\", description);\r\n//     if (imageFile) {\r\n//       formData.append(\"imageFile\", imageFile);\r\n//     }\r\n\r\n//     try {\r\n//       if (isEditing) {\r\n//         formData.append(\"productId\", productId);\r\n//         await ApiService.updateProduct(formData);\r\n//         showMessage(\"Product successfully updated\");\r\n//       } else {\r\n//         await ApiService.addProduct(formData);\r\n//         showMessage(\"Product successfully Saved ðŸ¤©\");\r\n//       }\r\n//       navigate(\"/product\");\r\n//     } catch (error) {\r\n//       showMessage(\r\n//         error.response?.data?.message || \"Error Saving a Product: \" + error\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Layout>\r\n//       {message && <div className=\"message\">{message}</div>}\r\n\r\n//       <div className=\"product-form-page\">\r\n//         <h1>{isEditing ? \"Edit Product\" : \"Add Product\"}</h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"form-group\">\r\n//             <label>Product Name</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={name}\r\n//               onChange={(e) => setName(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label>Sku</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={sku}\r\n//               onChange={(e) => setSku(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label>Stock Quantity</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               value={stockQuantity}\r\n//               onChange={(e) => setStokeQuantity(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label>Price</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               value={price}\r\n//               onChange={(e) => setPrice(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label>Description</label>\r\n\r\n//             <textarea\r\n//               value={description}\r\n//               onChange={(e) => setDescription(e.target.value)}\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label>Category</label>\r\n\r\n//             <select\r\n//               value={categoryId}\r\n//               onChange={(e) => setCategoryId(e.target.value)}\r\n//               required\r\n//             >\r\n//               <option value=\"\">Select a category</option>\r\n\r\n//               {categories.map((category) => (\r\n//                 <option key={category.id} value={category.id}>\r\n//                   {category.name}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label>Product Image</label>\r\n//             <input type=\"file\" onChange={handleImageChange} />\r\n\r\n//             {imageUrl && (\r\n//               <img src={imageUrl} alt=\"preview\" className=\"image-preview\" />\r\n//             )}\r\n//           </div>\r\n//           <button type=\"submit\">{isEditing ? \"Edit Product\" : \"Add Product\"}</button>\r\n\r\n//         </form>\r\n//       </div>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// export default AddEditProductPage;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../component/Layout\";\r\nimport ApiService from \"../service/ApiService\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst AddEditProductPage = () => {\r\n  const { productId } = useParams(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [sku, setSku] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [stockQuantity, setStokeQuantity] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Set the default image URL to the dummy image\r\n  const imageUrl = \"/assets/dummy.png\";\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const categoriesData = await ApiService.getAllCategory();\r\n        setCategories(categoriesData.categories);\r\n      } catch (error) {\r\n        showMessage(\r\n          error.response?.data?.message ||\r\n            \"Error Getting all Categories: \" + error\r\n        );\r\n      }\r\n    };\r\n\r\n    const fetProductById = async () => {\r\n      if (productId) {\r\n        setIsEditing(true);\r\n        try {\r\n          const productData = await ApiService.getProductById(productId);\r\n          if (productData.status === 200) {\r\n            setName(productData.product.name);\r\n            setSku(productData.product.sku);\r\n            setPrice(productData.product.price);\r\n            setStokeQuantity(productData.product.stockQuantity);\r\n            setCategoryId(productData.product.categoryId);\r\n            setDescription(productData.product.description);\r\n          } else {\r\n            showMessage(productData.message);\r\n          }\r\n        } catch (error) {\r\n          showMessage(\r\n            error.response?.data?.message ||\r\n              \"Error Getting a Product by Id: \" + error\r\n          );\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n    if (productId) fetProductById();\r\n  }, [productId]);\r\n\r\n  // Method to show message or errors\r\n  const showMessage = (msg) => {\r\n    setMessage(msg);\r\n    setTimeout(() => {\r\n      setMessage(\"\");\r\n    }, 4000);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"sku\", sku);\r\n    formData.append(\"price\", price);\r\n    formData.append(\"stockQuantity\", stockQuantity);\r\n    formData.append(\"categoryId\", categoryId);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"imageUrl\", imageUrl); // Always send the dummy image URL\r\n\r\n    try {\r\n      if (isEditing) {\r\n        formData.append(\"productId\", productId);\r\n        await ApiService.updateProduct(formData);\r\n        showMessage(\"Product successfully updated\");\r\n      } else {\r\n        await ApiService.addProduct(formData);\r\n        showMessage(\"Product successfully Saved ðŸ¤©\");\r\n      }\r\n      navigate(\"/product\");\r\n    } catch (error) {\r\n      showMessage(\r\n        error.response?.data?.message || \"Error Saving a Product: \" + error\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      {message && <div className=\"message\">{message}</div>}\r\n\r\n      <div className=\"product-form-page\">\r\n        <h1>{isEditing ? \"Edit Product\" : \"Add Product\"}</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Product Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Sku</label>\r\n            <input\r\n              type=\"text\"\r\n              value={sku}\r\n              onChange={(e) => setSku(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Stock Quantity</label>\r\n            <input\r\n              type=\"number\"\r\n              value={stockQuantity}\r\n              onChange={(e) => setStokeQuantity(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Price</label>\r\n            <input\r\n              type=\"number\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Description</label>\r\n            <textarea\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Category</label>\r\n            <select\r\n              value={categoryId}\r\n              onChange={(e) => setCategoryId(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select a category</option>\r\n              {categories.map((category) => (\r\n                <option key={category.id} value={category.id}>\r\n                  {category.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Display the dummy image */}\r\n          <div className=\"form-group\">\r\n            <label>Product Image</label>\r\n            <img src={imageUrl} alt=\"preview\" className=\"image-preview\" />\r\n          </div>\r\n\r\n          <button type=\"submit\">{isEditing ? \"Edit Product\" : \"Add Product\"}</button>\r\n        </form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AddEditProductPage;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAU,CAAC,GAAGL,SAAS,CAAC,EAAE,CAAC;EACnC,MAAM,CAACM,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}